#数据源配置 
datasource.url=jdbc:mysql://192.168.100.180:3306/dd?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
datasource.username=root
datasource.password=dev1688
datasource.driverClassName=com.mysql.cj.jdbc.Driver

#补丁文件存储路径 如果做测试可以直接使用tomcat作为静态服务器只需要把下面${你的tomcat路径}改成对应的就行了；**如果是用于生产环境可以使用nginx(修改为你的静态服务对应的根目录)
file_storage_path=/usr/local/tomcat/webapps/patch-manager-static
#下载补丁文件静态服务器地址 **这个服务的根目录需要设置为上面配置的(${file_storage_path})的路径
patch-static-url=http://localhost:8090/patch-manager-static
#控制台服务地址
tm-manager-url=http://localhost:8090/hotfix-console
#facade服务的地址
tm-facade-url=http://localhost:8090/hotfix-apis

#是否开放注册
open_regist=true

#通过java -jar的方式启动的服务使用此端口
server.port=9010
global_secret_key=rwerksgmnslmgs443254231faxc!@32%$#%
spring.velocity.toolbox-config-location=/WEB-INF/toolbox.xml

#发送邮件配置
spring.mail.host=smtp.163.com
spring.mail.port=25
spring.mail.username=tinker_manager@163.com
spring.mail.password=typ5669298
spring.mail.properties.mail.smtp.from=tinker_manager@163.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.user=Tinker-热修复管理平台

spring.http.multipart.max-file-size=100MB
spring.http.multipart.max-request-size=100MB