<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dx168.patchserver.core.mapper.PatchInfoMapper">
    <resultMap id="BaseResultMap" type="com.dx168.patchserver.core.domain.PatchInfo" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="app_uid" property="appUid" />
        <result column="version_name" property="versionName" />
        <result column="patch_version" property="patchVersion" />
        <result column="publish_version" property="publishVersion" />
        <result column="publish_type" property="publishType" />
        <result column="storage_path" property="storagePath" />
        <result column="patch_size" property="patchSize" />
        <result column="file_hash" property="fileHash" />
        <result column="download_url" property="downloadUrl" />
        <result column="apply_success_size" property="applySuccessSize" />
        <result column="apply_size" property="applySize" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>

    <insert id="insert" parameterType="com.dx168.patchserver.core.domain.PatchInfo">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into t_patch_info (
         user_id, app_uid,uid, version_name,patch_version,publish_version,status,publish_type,tags,storage_path,patch_size,file_hash,description,download_url,apply_success_size,apply_size, created_at, updated_at
        )
        values (
        #{userId,jdbcType=INTEGER},
        #{appUid,jdbcType=VARCHAR},
        #{uid,jdbcType=VARCHAR},
        #{versionName,jdbcType=VARCHAR},
        #{patchVersion,jdbcType=INTEGER},
        #{publishVersion,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER},
        #{publishType,jdbcType=INTEGER},
        #{tags,jdbcType=VARCHAR},
        #{storagePath,jdbcType=VARCHAR},
        #{patchSize,jdbcType=BIGINT},
        #{fileHash,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR},
        #{downloadUrl,jdbcType=VARCHAR},
        #{applySuccessSize,jdbcType=INTEGER},
        #{applySize,jdbcType=INTEGER},
        #{createdAt,jdbcType=TIMESTAMP},
        #{updatedAt,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="findByUidAndVersionName" resultMap="BaseResultMap">
        SELECT id,user_id, app_uid,uid, version_name,patch_version,publish_version,status,publish_type,tags,storage_path,patch_size,file_hash,description,download_url,apply_success_size,apply_size, created_at, updated_at
        FROM t_patch_info
        where app_uid = #{appUid} and version_name = #{versionName}
    </select>

    <select id="findById" resultMap="BaseResultMap">
        SELECT id,user_id, app_uid,uid, version_name,patch_version,publish_version,status,publish_type,tags,storage_path,patch_size,file_hash,description,download_url,apply_success_size,apply_size, created_at, updated_at
        FROM t_patch_info
        where id = #{id}
    </select>

    <select id="findByUid" resultMap="BaseResultMap">
        SELECT id,user_id, app_uid,uid, version_name,patch_version,publish_version,status,publish_type,tags,storage_path,patch_size,file_hash,description,download_url,apply_success_size,apply_size, created_at, updated_at
        FROM t_patch_info
        where uid = #{uid}
    </select>

    <select id="findByIdAndAppUid" resultMap="BaseResultMap">
        SELECT id,user_id, app_uid,uid, version_name,patch_version,publish_version,status,publish_type,tags,storage_path,patch_size,file_hash,description,download_url,apply_success_size,apply_size, created_at, updated_at
        FROM t_patch_info
        where id = #{id} and app_uid = #{appUid}
    </select>

    <update id="updateStatus" parameterType="com.dx168.patchserver.core.domain.PatchInfo" >
        UPDATE  t_patch_info
        SET status = #{status,jdbcType=VARCHAR}, publish_type = #{publishType,jdbcType=VARCHAR}
        <if test="updatedAt != null">
            ,updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        </if>

        <if test="tags != null">
            ,tags = #{tags,jdbcType=TIMESTAMP}
        </if>
        WHERE
        id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateCount">
        UPDATE  t_patch_info
        SET apply_success_size = #{applySuccessSize,jdbcType=VARCHAR}, apply_size = #{applySize,jdbcType=VARCHAR}
        <if test="updatedAt != null">
            ,updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        </if>

        WHERE
        id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteById" >
        DELETE FROM t_patch_info where id = #{id}
    </delete>

    <delete id="deleteByAppUid">
        DELETE from t_patch_info where app_uid = #{appUid}
    </delete>
</mapper>
